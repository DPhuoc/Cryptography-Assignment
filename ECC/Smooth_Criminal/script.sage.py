

# This file was *autogenerated* from the file script.sage
from sage.all_cmdline import *   # import sage library

_sage_const_310717010502520989590157367261876774703 = Integer(310717010502520989590157367261876774703); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_179210853392303317793440285562762725654 = Integer(179210853392303317793440285562762725654); _sage_const_105268671499942631758568591033409611165 = Integer(105268671499942631758568591033409611165); _sage_const_6 = Integer(6); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)

# Define the curve
p = _sage_const_310717010502520989590157367261876774703 
a = _sage_const_2 
b = _sage_const_3 



# Construct curve on sage
F = GF(p)
E = EllipticCurve(F, [a,b])

g_x = _sage_const_179210853392303317793440285562762725654 
g_y = _sage_const_105268671499942631758568591033409611165 
G = E(g_x, g_y)
print(G.order())

# Get public value A = G*n
fi=open("output.txt",'r')
data=fi.readline().rstrip()
data=data[_sage_const_6 :-_sage_const_1 ]
data=data.split(", ")
A_x, A_y = int(data[_sage_const_0 ][_sage_const_2 :]), int(data[_sage_const_1 ][_sage_const_2 :])
A=E(A_x, A_y)
print(A)

# Compute n
n = discrete_log(A,G,G.order(),operation='+')
print(f"Found n = {n}")

